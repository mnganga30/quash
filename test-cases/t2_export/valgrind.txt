==7415== Memcheck, a memory error detector
==7415== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7415== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==7415== Command: /mnt/c/Users/martin/Desktop/quash/quash
==7415== 
==7415== error calling PR_SET_PTRACER, vgdb might block
==7416== Invalid write of size 1
==7416==    at 0x10C0AC: get_current_directory (execute.c:68)
==7416==    by 0x10C5F9: run_pwd (execute.c:284)
==7416==    by 0x10C786: child_run_command (execute.c:340)
==7416==    by 0x10CAA5: create_process (execute.c:484)
==7416==    by 0x10CD11: run_script (execute.c:548)
==7416==    by 0x109A1E: main (quash.c:132)
==7416==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==7416== 
==7416== 
==7416== Process terminating with default action of signal 11 (SIGSEGV)
==7416==  Access not within mapped region at address 0x0
==7416==    at 0x10C0AC: get_current_directory (execute.c:68)
==7416==    by 0x10C5F9: run_pwd (execute.c:284)
==7416==    by 0x10C786: child_run_command (execute.c:340)
==7416==    by 0x10CAA5: create_process (execute.c:484)
==7416==    by 0x10CD11: run_script (execute.c:548)
==7416==    by 0x109A1E: main (quash.c:132)
==7416==  If you believe this happened as a result of a stack
==7416==  overflow in your program's main thread (unlikely but
==7416==  possible), you can try to increase the size of the
==7416==  main thread stack using the --main-stacksize= flag.
==7416==  The main thread stack size used in this run was 8388608.
==7416== 
==7416== HEAP SUMMARY:
==7416==     in use at exit: 21,891 bytes in 9 blocks
==7416==   total heap usage: 12 allocs, 3 frees, 23,235 bytes allocated
==7416== 
==7416== LEAK SUMMARY:
==7416==    definitely lost: 0 bytes in 0 blocks
==7416==    indirectly lost: 0 bytes in 0 blocks
==7416==      possibly lost: 0 bytes in 0 blocks
==7416==    still reachable: 21,891 bytes in 9 blocks
==7416==         suppressed: 0 bytes in 0 blocks
==7416== Reachable blocks (those to which a pointer was found) are not shown.
==7416== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==7416== 
==7416== For counts of detected and suppressed errors, rerun with: -v
==7416== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==7417== 
==7417== HEAP SUMMARY:
==7417==     in use at exit: 85 bytes in 3 blocks
==7417==   total heap usage: 23 allocs, 20 frees, 27,160 bytes allocated
==7417== 
==7417== LEAK SUMMARY:
==7417==    definitely lost: 0 bytes in 0 blocks
==7417==    indirectly lost: 0 bytes in 0 blocks
==7417==      possibly lost: 0 bytes in 0 blocks
==7417==    still reachable: 85 bytes in 3 blocks
==7417==         suppressed: 0 bytes in 0 blocks
==7417== Reachable blocks (those to which a pointer was found) are not shown.
==7417== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==7417== 
==7417== For counts of detected and suppressed errors, rerun with: -v
==7417== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==7418== Invalid write of size 1
==7418==    at 0x10C0AC: get_current_directory (execute.c:68)
==7418==    by 0x10C5F9: run_pwd (execute.c:284)
==7418==    by 0x10C786: child_run_command (execute.c:340)
==7418==    by 0x10CAA5: create_process (execute.c:484)
==7418==    by 0x10CD11: run_script (execute.c:548)
==7418==    by 0x109A1E: main (quash.c:132)
==7418==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==7418== 
==7418== 
==7418== Process terminating with default action of signal 11 (SIGSEGV)
==7418==  Access not within mapped region at address 0x0
==7418==    at 0x10C0AC: get_current_directory (execute.c:68)
==7418==    by 0x10C5F9: run_pwd (execute.c:284)
==7418==    by 0x10C786: child_run_command (execute.c:340)
==7418==    by 0x10CAA5: create_process (execute.c:484)
==7418==    by 0x10CD11: run_script (execute.c:548)
==7418==    by 0x109A1E: main (quash.c:132)
==7418==  If you believe this happened as a result of a stack
==7418==  overflow in your program's main thread (unlikely but
==7418==  possible), you can try to increase the size of the
==7418==  main thread stack using the --main-stacksize= flag.
==7418==  The main thread stack size used in this run was 8388608.
==7418== 
==7418== HEAP SUMMARY:
==7418==     in use at exit: 21,891 bytes in 9 blocks
==7418==   total heap usage: 35 allocs, 26 frees, 31,090 bytes allocated
==7418== 
==7418== LEAK SUMMARY:
==7418==    definitely lost: 0 bytes in 0 blocks
==7418==    indirectly lost: 0 bytes in 0 blocks
==7418==      possibly lost: 0 bytes in 0 blocks
==7418==    still reachable: 21,891 bytes in 9 blocks
==7418==         suppressed: 0 bytes in 0 blocks
==7418== Reachable blocks (those to which a pointer was found) are not shown.
==7418== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==7418== 
==7418== For counts of detected and suppressed errors, rerun with: -v
==7418== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==7419== error calling PR_SET_PTRACER, vgdb might block
==7419== 
==7419== HEAP SUMMARY:
==7419==     in use at exit: 75 bytes in 3 blocks
==7419==   total heap usage: 45 allocs, 42 frees, 34,989 bytes allocated
==7419== 
==7419== LEAK SUMMARY:
==7419==    definitely lost: 0 bytes in 0 blocks
==7419==    indirectly lost: 0 bytes in 0 blocks
==7419==      possibly lost: 0 bytes in 0 blocks
==7419==    still reachable: 75 bytes in 3 blocks
==7419==         suppressed: 0 bytes in 0 blocks
==7419== Reachable blocks (those to which a pointer was found) are not shown.
==7419== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==7419== 
==7419== For counts of detected and suppressed errors, rerun with: -v
==7419== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==7420== 
==7420== HEAP SUMMARY:
==7420==     in use at exit: 64 bytes in 3 blocks
==7420==   total heap usage: 57 allocs, 54 frees, 38,908 bytes allocated
==7420== 
==7420== LEAK SUMMARY:
==7420==    definitely lost: 0 bytes in 0 blocks
==7420==    indirectly lost: 0 bytes in 0 blocks
==7420==      possibly lost: 0 bytes in 0 blocks
==7420==    still reachable: 64 bytes in 3 blocks
==7420==         suppressed: 0 bytes in 0 blocks
==7420== Reachable blocks (those to which a pointer was found) are not shown.
==7420== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==7420== 
==7420== For counts of detected and suppressed errors, rerun with: -v
==7420== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==7415== 
==7415== HEAP SUMMARY:
==7415==     in use at exit: 56 bytes in 1 blocks
==7415==   total heap usage: 58 allocs, 57 frees, 38,916 bytes allocated
==7415== 
==7415== LEAK SUMMARY:
==7415==    definitely lost: 0 bytes in 0 blocks
==7415==    indirectly lost: 0 bytes in 0 blocks
==7415==      possibly lost: 0 bytes in 0 blocks
==7415==    still reachable: 56 bytes in 1 blocks
==7415==         suppressed: 0 bytes in 0 blocks
==7415== Reachable blocks (those to which a pointer was found) are not shown.
==7415== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==7415== 
==7415== For counts of detected and suppressed errors, rerun with: -v
==7415== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
